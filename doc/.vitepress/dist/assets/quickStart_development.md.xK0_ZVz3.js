import{_ as s,c as a,o as i,a4 as n}from"./chunks/framework.ObsCMCsf.js";const y=JSON.parse('{"title":"开始","description":"","frontmatter":{},"headers":[],"relativePath":"quickStart/development.md","filePath":"quickStart/development.md"}'),e={name:"quickStart/development.md"},l=n(`<h1 id="开始" tabindex="-1">开始 <a class="header-anchor" href="#开始" aria-label="Permalink to &quot;开始&quot;">​</a></h1><p>下面会从头开始介绍本地运行项目的几种方式</p><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">关于组件</p><p>项目虽然二次封装了一些组件，但是可能无法满足部分要求。如果组件无法满足你的要求，完全可以不用，甚至删除代码自己写，不必坚持使用项目自带的组件。</p></div><h2 id="环境准备" tabindex="-1">环境准备 <a class="header-anchor" href="#环境准备" aria-label="Permalink to &quot;环境准备&quot;">​</a></h2><p>本地环境需要安装 <a href="https://www.pnpm.cn/" target="_blank" rel="noreferrer">pnpm</a>、<a href="https://nodejs.org/zh-cn" target="_blank" rel="noreferrer">Node.js</a> 、 <a href="https://git-scm.com/" target="_blank" rel="noreferrer">Git</a> 、<a href="https://dev.mysql.com/downloads/" target="_blank" rel="noreferrer">MySQL</a> 和 <a href="https://www.redis.net.cn/#google_vignette" target="_blank" rel="noreferrer">Redis</a>。</p><div class="warning custom-block"><p class="custom-block-title">注意</p><ul><li>Node.js 版本要求18.x以上。</li><li>推荐安装 nvm 来管理 Node.js 版本。</li><li>MySQL 和 Redis 推荐使用 <a href="https://docker-practice.github.io/zh-cn/" target="_blank" rel="noreferrer">Docker</a> 进行安装。</li><li>本项目支持 <a href="https://docker-practice.github.io/zh-cn/" target="_blank" rel="noreferrer">Docker</a> ，若使用 <a href="https://docker-practice.github.io/zh-cn/compose/" target="_blank" rel="noreferrer">Docker Compose</a> 启动项目，请提前安装 <a href="https://docker-practice.github.io/zh-cn/" target="_blank" rel="noreferrer">Docker</a> 和 <a href="https://docker-practice.github.io/zh-cn/compose/" target="_blank" rel="noreferrer">Docker Compose</a>。</li><li>使用 <a href="https://docker-practice.github.io/zh-cn/compose/" target="_blank" rel="noreferrer">Docker Compose</a> 启动项目，无需单独安装 MySQL 和 Redis。</li></ul></div><h2 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h2><h3 id="安装node-js" tabindex="-1">安装Node.js <a class="header-anchor" href="#安装node-js" aria-label="Permalink to &quot;安装Node.js&quot;">​</a></h3><p>如果您电脑未安装Node.js，请安装它。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 出现相应npm版本即可</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 出现相应node版本即可</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span></code></pre></div><h4 id="使用nvm管理node-js版本" tabindex="-1">使用nvm管理Node.js版本 <a class="header-anchor" href="#使用nvm管理node-js版本" aria-label="Permalink to &quot;使用nvm管理Node.js版本&quot;">​</a></h4><ul><li>linux、mac：<a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noreferrer">https://github.com/nvm-sh/nvm</a></li><li>windows：<a href="https://github.com/coreybutler/nvm-windows" target="_blank" rel="noreferrer">https://github.com/coreybutler/nvm-windows</a></li></ul><h3 id="安装依赖-1" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖-1" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h3><h4 id="pnpm安装" tabindex="-1">pnpm安装 <a class="header-anchor" href="#pnpm安装" aria-label="Permalink to &quot;pnpm安装&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 全局安装pnpm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pnpm</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 验证</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 出现对应版本号即代表安装成功</span></span></code></pre></div><h4 id="依赖安装" tabindex="-1">依赖安装 <a class="header-anchor" href="#依赖安装" aria-label="Permalink to &quot;依赖安装&quot;">​</a></h4><p>在项目根目录下，打开命令窗口执行</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">husky安装失败</p><p>请查看你的源码是否从 github 或 gitee 直接下载的，直接下载是没有 .git 文件夹的，而 husky 需要依赖 git 才能安装。此时需使用 git init 初始化项目，再尝试重新安装即可。</p></div><h2 id="开发环境运行项目" tabindex="-1">开发环境运行项目 <a class="header-anchor" href="#开发环境运行项目" aria-label="Permalink to &quot;开发环境运行项目&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">MySQL 和 Redis</p><p>MySQL 和 Redis 需要提前安装好，并对数据库进行初始化。</p></div><p>开发环境的 MySQL 和 Redis 的连接配置在 <code>/api/.env.development</code> 文件中。</p><p>数据库的初始化脚本在 <code>/api/sql/ini.sql</code> 。</p><h3 id="前端运行" tabindex="-1">前端运行 <a class="header-anchor" href="#前端运行" aria-label="Permalink to &quot;前端运行&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /web</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><h3 id="后端运行" tabindex="-1">后端运行 <a class="header-anchor" href="#后端运行" aria-label="Permalink to &quot;后端运行&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /api</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 热更新</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start:dev</span></span></code></pre></div><h2 id="docker-compose-启动项目" tabindex="-1">Docker Compose 启动项目 <a class="header-anchor" href="#docker-compose-启动项目" aria-label="Permalink to &quot;Docker Compose 启动项目&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">Docker Compose</p><p>请确保电脑已安装 <a href="https://docker-practice.github.io/zh-cn/" target="_blank" rel="noreferrer">Docker</a> 和 <a href="https://docker-practice.github.io/zh-cn/compose/" target="_blank" rel="noreferrer">Docker Compose</a>。</p><p><a href="https://docker-practice.github.io/zh-cn/compose/" target="_blank" rel="noreferrer">Docker Compose</a> 启动项目：</p><ul><li>无需单独安装 MySQL 和 Redis。</li><li>默认使用生产环境配置。</li></ul></div><h4 id="前后端一体启动" tabindex="-1">前后端一体启动 <a class="header-anchor" href="#前后端一体启动" aria-label="Permalink to &quot;前后端一体启动&quot;">​</a></h4><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 配置MySQL和Redis的持久化目录</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 根目录下的 docker-compose.yml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;3.7&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  ...</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">   mysql-container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ...</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 修改&quot;D:\\foolon-admin-mysql&quot;为你的MySQL持久化目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">D:\\foolon-admin-mysql:/var/lib/mysql</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ...</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">   redis-container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ...</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 修改&quot;D:\\foolon-admin-redis&quot;为你的Redis持久化目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">D:\\foolon-admin-redis:/data</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 根目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker:compose:deploy</span></span></code></pre></div><h4 id="前端单独启动" tabindex="-1">前端单独启动 <a class="header-anchor" href="#前端单独启动" aria-label="Permalink to &quot;前端单独启动&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /web</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker:compose:deploy</span></span></code></pre></div><h4 id="后端单独启动" tabindex="-1">后端单独启动 <a class="header-anchor" href="#后端单独启动" aria-label="Permalink to &quot;后端单独启动&quot;">​</a></h4><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 配置MySQL和Redis的持久化目录</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># /api/docker-compose.yml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;3.7&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  ...</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">   mysql-container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ...</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 修改&quot;D:\\foolon-admin-mysql&quot;为你的MySQL持久化目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">D:\\foolon-admin-mysql:/var/lib/mysql</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ...</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">   redis-container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ...</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 修改&quot;D:\\foolon-admin-redis&quot;为你的Redis持久化目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">D:\\foolon-admin-redis:/data</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /api</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker:compose:deploy</span></span></code></pre></div>`,38),t=[l];function p(h,r,k,o,d,c){return i(),a("div",null,t)}const m=s(e,[["render",p]]);export{y as __pageData,m as default};
